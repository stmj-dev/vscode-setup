{
	// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// * FUNCTION PHP =================================================================================================================
	"public function": {
		"prefix": "pubfunc",
		"body": [
			"/**",
			" * ${1:function_name} ",
			" * ",
			" * @param ${1:arguments}",
			" * @return ${2:arguments}",
			" */",
			"public function ${1:function_name}(${2:arguments})",
			"{",
			"\t${3:// body}",
			"}"
		],
		"description": "Public function"
	},
	"protected function": {
		"prefix": "protfunc",
		"body": [
			"/**",
			" * ${1:function_name} ",
			" * ",
			" * @param ${1:arguments}",
			" * @return ${2:arguments}",
			" */",
			"protected function ${1:function_name}(${2:arguments})",
			"{",
			"\t${3:// body}",
			"}"
		],
		"description": "Protected function"
	},
	"private function": {
		"prefix": "protfunc",
		"body": [
			"/**",
			" * ${1:function_name} ",
			" * ",
			" * @param ${1:arguments}",
			" * @return ${2:arguments}",
			" */",
			"private function ${1:function_name}(${2:arguments})",
			"{",
			"\t${3:// body}",
			"}"
		],
		"description": "Private function"
	},
	"anonymous function": {
		"prefix": "anofunc",
		"body": ["function (${1:arguments}) {", "\t${2:// body}", "}"],
		"description": "anonymous function"
	},
	"arrow function": {
		"prefix": "infunc",
		"body": ["fn (${1:arguments}) => ${2:code}"],
		"description": "Arrow function"
	}
	// * / END FUNCTION PHP =================================================================================================================
}
